{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../api/services/passanger.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../auth/auth.service\";\nimport * as i4 from \"@angular/common\";\nfunction RegistrationComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email is invalid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, RegistrationComponent_div_6_div_1_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.form.controls.email.errors);\n  }\n}\nfunction RegistrationComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" First name is invalid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, RegistrationComponent_div_12_div_1_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.controls.firstName.errors);\n  }\n}\nfunction RegistrationComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Last name is invalid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, RegistrationComponent_div_17_div_1_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.form.controls.lastName.errors);\n  }\n}\nexport class RegistrationComponent {\n  constructor(_passangerService, _formBuilder, _authService) {\n    this._passangerService = _passangerService;\n    this._formBuilder = _formBuilder;\n    this._authService = _authService;\n    this.form = this._formBuilder.group({\n      email: [''],\n      firstName: [''],\n      lastName: [''],\n      isFemale: [true]\n    });\n  }\n  ngOnInit() {}\n  checkPassenger() {\n    const emailValue = {\n      email: this.form.get('email')?.value\n    };\n    if (typeof emailValue === 'string') {\n      const params = emailValue;\n      this._passangerService.findPassanger(params).subscribe(_ => {\n        console.log('Exist!');\n        this._authService.login({\n          email: params\n        });\n      });\n    }\n  }\n  register() {\n    console.log(this.form.value);\n    this._passangerService.registerPassanger({\n      body: this.form.value\n    }).subscribe(response => {\n      const emailValue = this.form.get('email')?.value;\n      if (typeof emailValue === 'string') {\n        this._authService.login({\n          email: emailValue\n        });\n      }\n    });\n  }\n  static #_ = this.ɵfac = function RegistrationComponent_Factory(t) {\n    return new (t || RegistrationComponent)(i0.ɵɵdirectiveInject(i1.PassangerService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistrationComponent,\n    selectors: [[\"app-registration\"]],\n    decls: 30,\n    vars: 6,\n    consts: [[3, \"formGroup\"], [1, \"container\", \"d-grid\", \"gap-3\", 2, \"max-width\", \"700px\"], [1, \"form-floating\"], [\"formControlName\", \"email\", \"placeholder\", \"Email\", \"type\", \"text\", 1, \"form-control\", 3, \"focusout\"], [\"for\", \"email\"], [\"class\", \"invalid-feedback d-block\", 4, \"ngIf\"], [1, \"d-grid\", \"gap-3\"], [\"formControlName\", \"firstName\", \"type\", \"text\", \"id\", \"firstName\", \"placeholder\", \"First Name\", 1, \"form-control\"], [\"for\", \"firstName\", 1, \"form-label\"], [\"formControlName\", \"lastName\", \"placeholder\", \"Last Name\", \"id\", \"lastName\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"lastName\", 1, \"form-label\"], [\"formControlName\", \"isFemale\", \"id\", \"isFemale\", \"type\", \"radio\", 1, \"form-check-input\", 3, \"value\"], [\"for\", \"isFemale\", 1, \"ms-2\", \"form-check-label\"], [1, \"d-flex\", \"justify-content-center\", \"center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-sign-in\"], [1, \"invalid-feedback\", \"d-block\"], [4, \"ngIf\"]],\n    template: function RegistrationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"input\", 3);\n        i0.ɵɵlistener(\"focusout\", function RegistrationComponent_Template_input_focusout_3_listener() {\n          return ctx.checkPassenger();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, RegistrationComponent_div_6_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 2);\n        i0.ɵɵelement(9, \"input\", 7);\n        i0.ɵɵelementStart(10, \"label\", 8);\n        i0.ɵɵtext(11, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, RegistrationComponent_div_12_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 2);\n        i0.ɵɵelement(14, \"input\", 9);\n        i0.ɵɵelementStart(15, \"label\", 10);\n        i0.ɵɵtext(16, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, RegistrationComponent_div_17_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\");\n        i0.ɵɵelement(19, \"input\", 11);\n        i0.ɵɵelementStart(20, \"label\", 12);\n        i0.ɵɵtext(21, \"Female\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵelement(23, \"input\", 11);\n        i0.ɵɵelementStart(24, \"label\", 12);\n        i0.ɵɵtext(25, \"Male\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 13)(27, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function RegistrationComponent_Template_button_click_27_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵtext(28, \"Login \");\n        i0.ɵɵelement(29, \"i\", 15);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.email.invalid && (ctx.form.controls.email.dirty || ctx.form.controls.email.touched));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.firstName.invalid && (ctx.form.controls.firstName.dirty || ctx.form.controls.firstName.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.lastName.invalid && (ctx.form.controls.lastName.dirty || ctx.form.controls.lastName.touched));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"value\", false);\n      }\n    },\n    dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","RegistrationComponent","constructor","_passangerService","_formBuilder","_authService","group","email","firstName","lastName","isFemale","ngOnInit","checkPassenger","emailValue","form","get","value","params","findPassanger","subscribe","_","console","log","login","register","registerPassanger","body","response","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Users\\filip\\source\\repos\\FlightsBooker\\ClientApp\\src\\app\\registration\\registration.component.html","D:\\Users\\filip\\source\\repos\\FlightsBooker\\ClientApp\\src\\app\\registration\\registration.component.ts"],"sourcesContent":["<form [formGroup]=\"form\">\n    <div class=\"container d-grid gap-3\" style=\"max-width: 700px;\">\n  \n      <div class=\"form-floating\">\n        <input  (focusout)=\"checkPassenger()\" formControlName=\"email\" placeholder=\"Email\" class=\"form-control\" type=\"text\" />\n        <label for=\"email\">Email</label>\n  \n        <div class=\"invalid-feedback d-block\" *ngIf=\"form.controls.email.invalid && (form.controls.email.dirty || form.controls.email.touched)\">\n          <div *ngIf=\"form.controls.email.errors\">\n            Email is invalid\n          </div>\n        </div>\n  \n      </div>\n      <div class=\"d-grid gap-3\">\n  \n        <div class=\"form-floating\">\n  \n          <input formControlName=\"firstName\" class=\"form-control\" type=\"text\" id=\"firstName\" placeholder=\"First Name\" />\n          <label class=\"form-label\" for=\"firstName\">First Name</label>\n  \n          <div class=\"invalid-feedback d-block\" *ngIf=\"form.controls.firstName.invalid && (form.controls.firstName.dirty || form.controls.firstName.touched)\">\n  \n            <div *ngIf=\"form.controls.firstName.errors\">\n              First name is invalid\n            </div>\n          </div>\n        </div>\n  \n        <div class=\"form-floating\">\n  \n          <input formControlName=\"lastName\" placeholder=\"Last Name\" class=\"form-control\" id=\"lastName\" type=\"text\" />\n          <label class=\"form-label\" for=\"lastName\">Last Name</label>\n  \n          <div class=\"invalid-feedback d-block\" *ngIf=\"form.controls.lastName.invalid && (form.controls.lastName.dirty || form.controls.lastName.touched)\">\n            <div *ngIf=\"form.controls.lastName.errors\">\n              Last name is invalid\n            </div>\n  \n          </div>\n        </div>\n  \n  \n        <div>\n  \n          <input formControlName=\"isFemale\" id=\"isFemale\" class=\"form-check-input\" [value]=true type=\"radio\" />\n          <label class=\"ms-2 form-check-label\" for=\"isFemale\">Female</label>\n        </div>\n        <div>\n          <input formControlName=\"isFemale\" id=\"isFemale\" class=\"form-check-input\" [value]=false type=\"radio\" />\n          <label class=\"ms-2 form-check-label\" for=\"isFemale\">Male</label>\n        </div>\n      </div>\n      <div class=\"d-flex justify-content-center center\">\n        <button (click)=\"register()\" type=\"submit\" class=\"btn btn-primary\">Login <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i></button>\n      </div>\n    </div>\n  </form>\n  \n","import { Component, OnInit } from '@angular/core';\nimport { PassangerService } from '../api/services/passanger.service';\nimport { FormBuilder } from '@angular/forms';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css'],\n})\nexport class RegistrationComponent implements OnInit {\n  \n  constructor(\n    private _passangerService: PassangerService,\n    private _formBuilder: FormBuilder,\n    private _authService: AuthService\n  ) {}\n\n  form = this._formBuilder.group({\n    email: [''],\n    firstName: [''],\n    lastName: [''],\n    isFemale: [true]\n  })\n\n  ngOnInit(): void {}\n\n\n  checkPassenger(): void {\n    const emailValue = {email: this.form.get('email')?.value}; \n    \n    if(typeof emailValue === 'string') {\n      const params = emailValue;\n      this._passangerService.findPassanger(params).subscribe(_ => {\n        console.log('Exist!')\n        this._authService.login({email: params})\n      });\n    }\n\n  }\n\n  register() {\n    console.log(this.form.value);\n  \n    this._passangerService.registerPassanger({ body: this.form.value })\n      .subscribe(response => {\n        const emailValue = this.form.get('email')?.value;\n        if (typeof emailValue === 'string') {\n          this._authService.login({ email: emailValue});\n        } \n      });\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}