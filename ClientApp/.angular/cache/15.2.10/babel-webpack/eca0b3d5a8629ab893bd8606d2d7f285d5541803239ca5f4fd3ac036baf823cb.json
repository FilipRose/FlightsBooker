{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../api/services\";\nimport * as i3 from \"../auth/auth.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nexport class BookTicketComponent {\n  constructor(_route, _router, _flightService, _authService, _formBuilder) {\n    this._route = _route;\n    this._router = _router;\n    this._flightService = _flightService;\n    this._authService = _authService;\n    this._formBuilder = _formBuilder;\n    this.flightId = 'not loaded';\n    this.flight = {};\n    this.formFlight = this._formBuilder.group({\n      number: [1]\n    });\n    this.findFlight = flightId => {\n      this.flightId = flightId ?? 'not passed';\n      this._flightService.findFlights({\n        id: this.flightId\n      }).subscribe(flight => this.flight = flight, this.handleError);\n    };\n    this.handleError = err => {\n      if (err.status == 404) {\n        alert(\"Flight not found!\");\n        this._router.navigate(['/search-flights']);\n      }\n      if (err.status == 400) {\n        alert(\"400 Bad Request to the server!\");\n        this._router.navigate(['/search-flights']);\n      }\n    };\n  }\n  ngOnInit() {\n    this.flightIdSub();\n    this.isNotRegister();\n  }\n  isNotRegister() {\n    if (!this._authService.currentUser) {\n      this._router.navigate(['/register']);\n    }\n  }\n  flightIdSub() {\n    this._route.paramMap.subscribe(p => this.findFlight(p.get('flightId')));\n  }\n  bookFlight() {\n    console.log(this._formBuilder, this.flight.id);\n  }\n  static #_ = this.ɵfac = function BookTicketComponent_Factory(t) {\n    return new (t || BookTicketComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FlightsService), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BookTicketComponent,\n    selectors: [[\"app-book-ticket\"]],\n    decls: 54,\n    vars: 20,\n    consts: [[1, \"text-md-center\", \"m-5\"], [1, \"card-body\", \"text-center\", 2, \"padding\", \"20px\", \"background-color\", \"#e5ecf26e\"], [1, \"card-title\"], [1, \"card-title\", 2, \"color\", \"#ff3939\"], [1, \"d-grid\", \"text-center\", \"g-2\"], [1, \"row\"], [1, \"col\"], [1, \"col\", \"m-3\"], [1, \"text-primary\", \"fas\", \"fa-plane-departure\", 2, \"font-size\", \"20px\"], [1, \"fa-solid\", \"fa-location-dot\"], [1, \"col\", \"m-2\"], [1, \"fa-regular\"], [1, \"fa-regular\", \"fa-clock\"], [2, \"display\", \"flex\"], [1, \"fa-solid\", \"fa-circle\", 2, \"margin-top\", \"51px\", \"font-size\", \"9px\"], [2, \"display\", \"block\", \"width\", \"100%\", \"margin-top\", \"55px\"], [1, \"fas\", \"fa-plane\", 2, \"margin-top\", \"48px\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-usd\"], [1, \"text-primary\", \"fas\", \"fa-plane-arrival\", 2, \"font-size\", \"20px\"], [1, \"col\", \"m-2\", \"text-primary\"], [1, \"card-footer\", \"d-flex\", \"justify-content-center\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"numberOfSeats\", 1, \"form-label\", \"mt-5\"], [1, \"center\", \"input-group\"], [\"formControlName\", \"number\", \"type\", \"number\", \"id\", \"numberOfSeats\", \"name\", \"numberOfSeats\", \"placeholder\", \"Number of Seats\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"fas\", \"fa-ticket\"]],\n    template: function BookTicketComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h5\", 0);\n        i0.ɵɵtext(1, \"Book Flight\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"h6\", 2);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 4)(8, \"div\", 5)(9, \"div\", 6)(10, \"div\", 7);\n        i0.ɵɵelement(11, \"i\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 6)(13, \"i\", 9);\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 10);\n        i0.ɵɵelement(16, \"i\", 11);\n        i0.ɵɵtext(17);\n        i0.ɵɵpipe(18, \"date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 6)(20, \"i\", 12);\n        i0.ɵɵtext(21);\n        i0.ɵɵpipe(22, \"date\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(23, \"div\", 6)(24, \"div\", 13);\n        i0.ɵɵelement(25, \"i\", 14)(26, \"hr\", 15)(27, \"i\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"i\", 17);\n        i0.ɵɵtext(29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 6)(32, \"div\", 7);\n        i0.ɵɵelement(33, \"i\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 6)(35, \"i\", 9);\n        i0.ɵɵtext(36);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"div\", 19);\n        i0.ɵɵelement(38, \"i\", 11);\n        i0.ɵɵtext(39);\n        i0.ɵɵpipe(40, \"date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"div\", 6)(42, \"i\", 12);\n        i0.ɵɵtext(43);\n        i0.ɵɵpipe(44, \"date\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(45, \"div\", 20)(46, \"form\", 21);\n        i0.ɵɵlistener(\"ngSubmit\", function BookTicketComponent_Template_form_ngSubmit_46_listener() {\n          return ctx.bookFlight();\n        });\n        i0.ɵɵelementStart(47, \"label\", 22);\n        i0.ɵɵtext(48, \"Number of Seats\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"div\", 23);\n        i0.ɵɵelement(50, \"input\", 24);\n        i0.ɵɵelementStart(51, \"button\", 25);\n        i0.ɵɵelement(52, \"i\", 26);\n        i0.ɵɵtext(53, \" Book \");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.flight.airline);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.flight.numberOfSeats, \" remaining seats\");\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate1(\" \", ctx.flight.departure == null ? null : ctx.flight.departure.place, \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(18, 10, ctx.flight.departure == null ? null : ctx.flight.departure.time), \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(22, 12, ctx.flight.departure == null ? null : ctx.flight.departure.time, \"shortTime\"), \" \");\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(ctx.flight.price);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" \", ctx.flight.arrival == null ? null : ctx.flight.arrival.place, \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(40, 15, ctx.flight.arrival == null ? null : ctx.flight.arrival.time), \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(44, 17, ctx.flight.arrival == null ? null : ctx.flight.arrival.time, \"shortTime\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.formFlight);\n      }\n    },\n    dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.DatePipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;AAaA,OAAM,MAAOA,mBAAmB;EAQ9BC,YACUC,MAAsB,EACtBC,OAAe,EACfC,cAA8B,EAC9BC,YAAyB,EACzBC,YAAyB;IAJzB,WAAM,GAANJ,MAAM;IACN,YAAO,GAAPC,OAAO;IACP,mBAAc,GAAdC,cAAc;IACd,iBAAY,GAAZC,YAAY;IACZ,iBAAY,GAAZC,YAAY;IAZtB,aAAQ,GAAW,YAAY;IAC/B,WAAM,GAAgB,EAAE;IAExB,eAAU,GAAG,IAAI,CAACA,YAAY,CAACC,KAAK,CAAC;MACnCC,MAAM,EAAE,CAAC,CAAC;KACX,CAAC;IAqBM,eAAU,GAAIC,QAAuB,IAAI;MAC/C,IAAI,CAACA,QAAQ,GAAGA,QAAQ,IAAI,YAAY;MAExC,IAAI,CAACL,cAAc,CAACM,WAAW,CAAC;QAACC,EAAE,EAAE,IAAI,CAACF;MAAQ,CAAE,CAAC,CACpDG,SAAS,CAACC,MAAM,IAAI,IAAI,CAACA,MAAM,GAAGA,MAAM,EAAE,IAAI,CAACC,WAAW,CAAC;IAC9D,CAAC;IAEO,gBAAW,GAAIC,GAAQ,IAAI;MAEjC,IAAGA,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;QACpBC,KAAK,CAAC,mBAAmB,CAAC;QAC1B,IAAI,CAACd,OAAO,CAACe,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;;MAG5C,IAAGH,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;QACpBC,KAAK,CAAC,gCAAgC,CAAC;QACvC,IAAI,CAACd,OAAO,CAACe,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;;IAE9C,CAAC;EA/BE;EAEHC,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACC,aAAa,EAAE;EACtB;EAEQA,aAAa;IACnB,IAAG,CAAC,IAAI,CAAChB,YAAY,CAACiB,WAAW,EAAE;MACjC,IAAI,CAACnB,OAAO,CAACe,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;;EAExC;EAsBAE,WAAW;IACT,IAAI,CAAClB,MAAM,CAACqB,QAAQ,CAACX,SAAS,CAAEY,CAAC,IAAK,IAAI,CAACC,UAAU,CAACD,CAAC,CAACE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;EAC3E;EAEAC,UAAU;IACRC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACvB,YAAY,EAAE,IAAI,CAACO,MAAM,CAACF,EAAE,CAAC;EAChD;EAAC;qBArDUX,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAA8B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCbhCC,6BAA+B;QAAAA,2BAAW;QAAAA,iBAAK;QAE/CA,8BAAqF;QAC3DA,YAAkB;QAAAA,iBAAK;QAC/CA,8BAA+C;QAAAA,YAAwC;QAAAA,iBAAM;QAC7FA,8BAAoC;QAK5BA,wBAA4E;QAC9EA,iBAAM;QACNA,+BAAiB;QAEbA,aACF;QAAAA,iBAAI;QAGNA,gCAAqB;QACnBA,yBAA0B;QAC1BA,aAEF;;QAAAA,iBAAM;QACNA,+BAAiB;QAGbA,aACF;;QAAAA,iBAAI;QAIRA,+BAAiB;QAEbA,yBAA4E;QAK9EA,iBAAM;QACNA,8BAAwC;QAAAA,aAAgB;QAAAA,iBAAI;QAC5DA,sBAAI;QAENA,iBAAM;QACNA,+BAAiB;QAEbA,yBAA0E;QAE5EA,iBAAM;QACNA,+BAAiB;QAGbA,aACF;QAAAA,iBAAI;QAENA,gCAAkC;QAChCA,yBAA2B;QAC3BA,aAEF;;QAAAA,iBAAM;QACNA,+BAAiB;QAEbA,aACF;;QAAAA,iBAAI;QAQdA,gCAAuD;QAEtBA;UAAA,OAAYC,gBAAY;QAAA,EAAC;QACtDD,kCAAmD;QAAAA,gCAAe;QAAAA,iBAAQ;QAC1EA,gCAAgC;QAE9BA,6BACuC;QACvCA,mCAA8C;QAC5CA,yBAA6B;QAC7BA,uBACF;QAAAA,iBAAS;;;QA9EWA,eAAkB;QAAlBA,wCAAkB;QACKA,eAAwC;QAAxCA,uEAAwC;QAU7EA,eACF;QADEA,iGACF;QAKAA,eAEF;QAFEA,wHAEF;QAIIA,eACF;QADEA,qIACF;QAYsCA,eAAgB;QAAhBA,sCAAgB;QAYpDA,eACF;QADEA,6FACF;QAIAA,eAEF;QAFEA,oHAEF;QAGIA,eACF;QADEA,iIACF;QAUFA,eAAwB;QAAxBA,0CAAwB","names":["BookTicketComponent","constructor","_route","_router","_flightService","_authService","_formBuilder","group","number","flightId","findFlights","id","subscribe","flight","handleError","err","status","alert","navigate","ngOnInit","flightIdSub","isNotRegister","currentUser","paramMap","p","findFlight","get","bookFlight","console","log","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\filip\\source\\repos\\FlightsBooker\\ClientApp\\src\\app\\book-ticket\\book-ticket.component.ts","C:\\Users\\filip\\source\\repos\\FlightsBooker\\ClientApp\\src\\app\\book-ticket\\book-ticket.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, } from '@angular/router';\r\nimport { FlightsService } from '../api/services';\r\nimport { FlightModel } from '../api/models';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-book-ticket',\r\n  templateUrl: './book-ticket.component.html',\r\n  styleUrls: ['./book-ticket.component.css'],\r\n})\r\nexport class BookTicketComponent implements OnInit {\r\n  flightId: string = 'not loaded';\r\n  flight: FlightModel = {};\r\n\r\n  formFlight = this._formBuilder.group({\r\n    number: [1]\r\n  })\r\n\r\n  constructor(\r\n    private _route: ActivatedRoute,\r\n    private _router: Router,\r\n    private _flightService: FlightsService,\r\n    private _authService: AuthService,\r\n    private _formBuilder: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.flightIdSub();\r\n    this.isNotRegister();\r\n  }\r\n\r\n  private isNotRegister() {\r\n    if(!this._authService.currentUser) {\r\n      this._router.navigate(['/register']);\r\n    }\r\n  }\r\n\r\n  private findFlight = (flightId: string | null) => {\r\n    this.flightId = flightId ?? 'not passed';\r\n\r\n    this._flightService.findFlights({id: this.flightId })\r\n    .subscribe(flight => this.flight = flight, this.handleError)\r\n  }\r\n\r\n  private handleError = (err: any) => {\r\n\r\n    if(err.status == 404) {\r\n      alert(\"Flight not found!\");\r\n      this._router.navigate(['/search-flights']);\r\n    }\r\n\r\n    if(err.status == 400) {\r\n      alert(\"400 Bad Request to the server!\");\r\n      this._router.navigate(['/search-flights']);\r\n    }\r\n  }\r\n\r\n  flightIdSub() {\r\n    this._route.paramMap.subscribe((p) => this.findFlight(p.get('flightId')));\r\n  }\r\n\r\n  bookFlight(): void {\r\n    console.log(this._formBuilder, this.flight.id);\r\n  }\r\n}\r\n","<h5 class=\"text-md-center m-5\">Book Flight</h5>\r\n\r\n<div class=\"card-body text-center\" style=\"padding: 20px; background-color:#e5ecf26e\">\r\n  <h6 class=\"card-title \">{{flight.airline}}</h6>\r\n  <div class=\"card-title\" style=\"color: #ff3939\">{{flight.numberOfSeats}} remaining seats</div>\r\n  <div class=\"d-grid text-center g-2\">\r\n    <div class=\"row\">\r\n      <div class=\"col\">\r\n        <div class=\"col m-3\">\r\n\r\n          <i class=\"text-primary fas fa-plane-departure\" style=\"font-size: 20px;\"></i>\r\n        </div>\r\n        <div class=\"col\">\r\n          <i class=\"fa-solid fa-location-dot\">\r\n            {{flight.departure?.place}}\r\n          </i>\r\n\r\n        </div>\r\n        <div class=\"col m-2\">\r\n          <i class=\"fa-regular\"></i>\r\n          {{flight.departure?.time | date}}\r\n\r\n        </div>\r\n        <div class=\"col\">\r\n\r\n          <i class=\"fa-regular fa-clock\">\r\n            {{flight.departure?.time | date:'shortTime'}}\r\n          </i>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col\">\r\n        <div style=\"display: flex;\">\r\n          <i class=\"fa-solid  fa-circle\" style=\"margin-top:51px; font-size: 9px;\"></i>\r\n          <hr style=\"display:block;width: 100%;margin-top: 55px;\">\r\n          <i class=\"fas fa-plane\" style=\"margin-top: 48px;\"></i>\r\n\r\n\r\n        </div>\r\n        <i class=\"fa fa-usd\" aria-hidden=\"true\">{{flight.price}}</i>\r\n        <br>\r\n\r\n      </div>\r\n      <div class=\"col\">\r\n        <div class=\"col m-3\">\r\n          <i class=\"text-primary fas fa-plane-arrival\" style=\"font-size: 20px;\"></i>\r\n\r\n        </div>\r\n        <div class=\"col\">\r\n\r\n          <i class=\"fa-solid fa-location-dot\">\r\n            {{flight.arrival?.place}}\r\n          </i>\r\n        </div>\r\n        <div class=\"col m-2 text-primary\">\r\n          <i class=\"fa-regular \"></i>\r\n          {{flight.arrival?.time | date}}\r\n\r\n        </div>\r\n        <div class=\"col\">\r\n          <i class=\"fa-regular fa-clock\">\r\n            {{flight.arrival?.time | date:'shortTime'}}\r\n          </i>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"card-footer d-flex justify-content-center\">\r\n\r\n  <form [formGroup]=\"formFlight\" (ngSubmit)=\"bookFlight()\">\r\n    <label class=\"form-label mt-5\" for=\"numberOfSeats\">Number of Seats</label>\r\n    <div class=\"center input-group\">\r\n\r\n      <input formControlName=\"number\" type=\"number\" class=\"form-control\" id=\"numberOfSeats\" name=\"numberOfSeats\"\r\n             placeholder=\"Number of Seats\" />\r\n      <button type=\"submit\" class=\"btn btn-primary\">\r\n        <i class=\"fas fa-ticket\"></i>\r\n        Book\r\n      </button>\r\n    </div>\r\n  </form>\r\n\r\n</div>\r\n\r\n<!-- <div *ngIf=\"number.invalid && (number.dirty || number.touched)\" class=\"invalid-feedback d-block\">\r\n  <div *ngIf=\"number.errors?.['required']\">\r\n    How many people do you want to book the flight for?\r\n  </div>\r\n  <div *ngIf=\"number.errors?.['min']\">\r\n    You can not book for less than 1 passenger!\r\n  </div>\r\n  <div *ngIf=\"number.errors?.['max']\">\r\n    Our planes do not have more than 254 seats.\r\n  </div>\r\n</div> -->\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}